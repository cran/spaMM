exportPattern("^[[:alpha:]]+")
export(".evalWrapper", ".Cholwrap", ".calc_CARdispGammaGLM", ".calc_dispGammaGLM", ".ZWZt",
       ".dispFn", ".dispInv", ".nuFn", ".nuInv", ".rhoFn", ".rhoInv", ".NB_shapeFn", ".NB_shapeInv", 
       ".crossprod", ".tcrossprod") ## probitgem
importFrom("graphics", ".filled.contour", "Axis", "abline", "axis", "box", "hist", "layout", 
           "lcm", "lines", "par", "plot.new", "plot.window", "points", "polygon", "rect", "title")
importFrom("graphics", "plot")
importFrom("methods", "as", "is", "cbind2", "rbind2", "new")
importFrom("stats", "as.formula", "coefficients", "dgamma", "dnorm", "family", "formula", "getCall", 
           "glm", "lm", "make.link", "model.frame", "model.matrix", "model.offset", "model.response", 
            "optim", "optimize", "pchisq", "pnorm", "qchisq", "qnorm", "qqline", "qqnorm", 
           "rbeta", "rbinom", "rgamma", "rnorm", "rpois", "runif", "terms", 
           "update.formula", "var", "weights")
importFrom("stats", "simulate", "anova", "confint", "fitted", "predict", "update", "logLik", "vcov", "coef",
           "gaussian", "binomial", "dpois", "Gamma", "resid", "uniroot", "deviance", "dbinom", "plogis", "lm.wfit")
importFrom("stats", "as.dist", "AIC", "qnbinom", "qpois", "rnbinom", "integrate")
importFrom("utils", "relist", "txtProgressBar", "setTxtProgressBar", "modifyList", "strOptions", "str",
           "write.table", "packageVersion")
importFrom("Matrix", "Matrix", "drop", "isDiagonal", "diag", "t", "solve", "Diagonal", "crossprod", "tcrossprod", "rowSums", "colSums")
importFrom("Matrix", "sparseMatrix", "qr", "qrR", "qr.R", "qr.Q", "isSymmetric", "forceSymmetric", "Cholesky","determinant")
importFrom("proxy", "dist", "pr_DB")
importFrom("Rcpp", "evalCpp")
importFrom("nlme", "getGroups", "fixef", "ranef", "getCovariate", "corFactor", "corMatrix")
importFrom("MASS", "ginv", "gamma.shape", "mvrnorm")
export(fixef) ## comes from nlme namespace 
export(ranef) ## comes from nlme namespace
S3method(dim, precision)
S3method(getCall, HLfit)
S3method(deviance, HLfit)
S3method(anova, HLfit)
S3method(coef,corMatern)
S3method(AIC, HLfit)
S3method(confint, HLfit)
S3method(logLik, HLfit)
S3method(logLik, HLfitlist)
S3method(fitted, HLfit)
S3method(fixef, HLfit)
S3method(ranef, HLfit)
S3method(fitted, HLfitlist)
S3method(residuals, HLfit)
S3method(plot, HLfit)
S3method(predict, HLfit)
S3method(simulate, HLfitlist)
S3method(simulate, HLfit)
S3method(summary, HLfit)
S3method(summary, HLfitlist)
S3method(summary, fixedLRT)
S3method(print, vcov.HLfit)
S3method(print, HLfit)
S3method(print, HLfitlist)
S3method(print, fixedLRT)
S3method(print, predictor)
S3method(print, arglist)
S3method(print, predictions)
S3method(update, HLfit)
S3method(vcov, HLfit)
S3method(MaternCorr, default)
S3method("[", predictions)
S3method("[", precision)
#S3method(get_from_MME,sXaug_EigenDense_QRP_scaled)
S3method(get_from_MME,sXaug_EigenDense_QRP_Chol_scaled)
#S3method(get_from_MME,sXaug_EigenDense_QR_scaled)
#S3method(get_from_MME,sXaug_baseDense_QRP_scaled)
#S3method(get_from_MME,sXaug_EigenSparse_QR_scaled)
#S3method(get_from_MME,sXaug_EigenSparse_QRP_scaled)
#S3method(get_from_MME,sXaug_EigenSparse_LDLP_scaled)
#S3method(get_from_MME,sXaug_EigenSparse_LDL_scaled)
#S3method(get_from_MME,sXaug_EigenSparse_LLP_scaled)
#S3method(get_from_MME,sXaug_Matrix_QRP_scaled)
S3method(get_from_MME,sXaug_Matrix_QRP_CHM_scaled)
#S3method(get_from_MME,sXaug_Matrix_cholP_scaled)
S3method(get_from_MME,AUGI0_ZX_sparsePrecision)
S3method(get_from_MME,sparseMatrix)
S3method(get_from_MME,default)
S3method(get_from_MME_default,matrix)
S3method(get_from_MME_default,Matrix)
useDynLib(spaMM, .registration=TRUE)  #  exposes to user level => objects need doc.
