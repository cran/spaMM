// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// lmwithQ
SEXP lmwithQ(SEXP XX, SEXP yy);
RcppExport SEXP spaMM_lmwithQ(SEXP XXSEXP, SEXP yySEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< SEXP >::type XX(XXSEXP );
        Rcpp::traits::input_parameter< SEXP >::type yy(yySEXP );
        SEXP __result = lmwithQ(XX, yy);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// lmwithSparseQ
SEXP lmwithSparseQ(SEXP XX, SEXP yy);
RcppExport SEXP spaMM_lmwithSparseQ(SEXP XXSEXP, SEXP yySEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< SEXP >::type XX(XXSEXP );
        Rcpp::traits::input_parameter< SEXP >::type yy(yySEXP );
        SEXP __result = lmwithSparseQ(XX, yy);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// leverages
SEXP leverages(SEXP XX);
RcppExport SEXP spaMM_leverages(SEXP XXSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< SEXP >::type XX(XXSEXP );
        SEXP __result = leverages(XX);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// Rcpp_qr_Q
SEXP Rcpp_qr_Q(SEXP XX);
RcppExport SEXP spaMM_Rcpp_qr_Q(SEXP XXSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< SEXP >::type XX(XXSEXP );
        SEXP __result = Rcpp_qr_Q(XX);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// Rcpp_QR
SEXP Rcpp_QR(SEXP XX);
RcppExport SEXP spaMM_Rcpp_QR(SEXP XXSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< SEXP >::type XX(XXSEXP );
        SEXP __result = Rcpp_QR(XX);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// Rcpp_sparseQR
SEXP Rcpp_sparseQR(SEXP XX);
RcppExport SEXP spaMM_Rcpp_sparseQR(SEXP XXSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< SEXP >::type XX(XXSEXP );
        SEXP __result = Rcpp_sparseQR(XX);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// sweepZ1W
SEXP sweepZ1W(SEXP ZZ, SEXP WW);
RcppExport SEXP spaMM_sweepZ1W(SEXP ZZSEXP, SEXP WWSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< SEXP >::type ZZ(ZZSEXP );
        Rcpp::traits::input_parameter< SEXP >::type WW(WWSEXP );
        SEXP __result = sweepZ1W(ZZ, WW);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// ZWZt
SEXP ZWZt(SEXP ZZ, SEXP WW);
RcppExport SEXP spaMM_ZWZt(SEXP ZZSEXP, SEXP WWSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< SEXP >::type ZZ(ZZSEXP );
        Rcpp::traits::input_parameter< SEXP >::type WW(WWSEXP );
        SEXP __result = ZWZt(ZZ, WW);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// ZtWZ
SEXP ZtWZ(SEXP ZZ, SEXP WW);
RcppExport SEXP spaMM_ZtWZ(SEXP ZZSEXP, SEXP WWSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< SEXP >::type ZZ(ZZSEXP );
        Rcpp::traits::input_parameter< SEXP >::type WW(WWSEXP );
        SEXP __result = ZtWZ(ZZ, WW);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// RcppChol
SEXP RcppChol(SEXP AA);
RcppExport SEXP spaMM_RcppChol(SEXP AASEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< SEXP >::type AA(AASEXP );
        SEXP __result = RcppChol(AA);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// crossprodCpp
SEXP crossprodCpp(SEXP Mat);
RcppExport SEXP spaMM_crossprodCpp(SEXP MatSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< SEXP >::type Mat(MatSEXP );
        SEXP __result = crossprodCpp(Mat);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// tcrossprodCpp
SEXP tcrossprodCpp(SEXP Mat);
RcppExport SEXP spaMM_tcrossprodCpp(SEXP MatSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< SEXP >::type Mat(MatSEXP );
        SEXP __result = tcrossprodCpp(Mat);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// pseudoSolvediag
SEXP pseudoSolvediag(SEXP XX, SEXP bb);
RcppExport SEXP spaMM_pseudoSolvediag(SEXP XXSEXP, SEXP bbSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< SEXP >::type XX(XXSEXP );
        Rcpp::traits::input_parameter< SEXP >::type bb(bbSEXP );
        SEXP __result = pseudoSolvediag(XX, bb);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// LevenbergMsolveCpp
SEXP LevenbergMsolveCpp(SEXP AA, SEXP rrhhss, SEXP dd);
RcppExport SEXP spaMM_LevenbergMsolveCpp(SEXP AASEXP, SEXP rrhhssSEXP, SEXP ddSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< SEXP >::type AA(AASEXP );
        Rcpp::traits::input_parameter< SEXP >::type rrhhss(rrhhssSEXP );
        Rcpp::traits::input_parameter< SEXP >::type dd(ddSEXP );
        SEXP __result = LevenbergMsolveCpp(AA, rrhhss, dd);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// LogAbsDetCpp
SEXP LogAbsDetCpp(SEXP AA);
RcppExport SEXP spaMM_LogAbsDetCpp(SEXP AASEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< SEXP >::type AA(AASEXP );
        SEXP __result = LogAbsDetCpp(AA);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// selfAdjointSolverCpp
SEXP selfAdjointSolverCpp(SEXP AA);
RcppExport SEXP spaMM_selfAdjointSolverCpp(SEXP AASEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< SEXP >::type AA(AASEXP );
        SEXP __result = selfAdjointSolverCpp(AA);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// LevPerturbedQCpp
SEXP LevPerturbedQCpp(SEXP perturbedwAugX, SEXP pforREML, SEXP RpRu, SEXP RpRd, SEXP lamOverLam0, SEXP phiOverPhi0);
RcppExport SEXP spaMM_LevPerturbedQCpp(SEXP perturbedwAugXSEXP, SEXP pforREMLSEXP, SEXP RpRuSEXP, SEXP RpRdSEXP, SEXP lamOverLam0SEXP, SEXP phiOverPhi0SEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< SEXP >::type perturbedwAugX(perturbedwAugXSEXP );
        Rcpp::traits::input_parameter< SEXP >::type pforREML(pforREMLSEXP );
        Rcpp::traits::input_parameter< SEXP >::type RpRu(RpRuSEXP );
        Rcpp::traits::input_parameter< SEXP >::type RpRd(RpRdSEXP );
        Rcpp::traits::input_parameter< SEXP >::type lamOverLam0(lamOverLam0SEXP );
        Rcpp::traits::input_parameter< SEXP >::type phiOverPhi0(phiOverPhi0SEXP );
        SEXP __result = LevPerturbedQCpp(perturbedwAugX, pforREML, RpRu, RpRd, lamOverLam0, phiOverPhi0);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
